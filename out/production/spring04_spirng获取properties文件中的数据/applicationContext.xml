<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    ">

    <!--     引入 context的命名空间的约束
    context 一些 xml的标签
    context:property-placeholder  引入 properties文件
    javaweb项目: 代码编译后  /WEB-INF/classes 这个目录  (java 代码编译后的目录 )

         db.properties 这个文件中的数据 可以 连接数据库
     用spring 配置一个连接数据库的操作
         连接池的配置
           1. 导入 连接的jar / 数据库的驱动jar
           2. 配置
    -->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!--    通过spring的配置 来初始化 连接池的操作
            以前:
              1. 读取 db.properties 文件中的数据
              2. new DataSourcexxx()
                 设置  username
                 设置  password xxx
             直接使用spring来注入这些数据  连接池的创建给spring 来管理
    -->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
    destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
</beans>
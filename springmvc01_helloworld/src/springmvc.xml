<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd

">

<!--    ioc容器 管理 controller
          配置映射关系 通过 url找到  controller
         配置 controller  url找到 controller

         id和name的区别:
         name 中可以用特殊字符串 / 推荐用name
         浏览器请求项目的时候:
         http://localhost/项目的访问路径/hello  这个请求到HelloController
         中进行处理
-->
    <bean name="/hello" class="com.sxt.controller.HelloController"></bean>

<!--    扫描 -->
    <context:component-scan base-package="com.sxt.controller"></context:component-scan>

<!--    导入命名空间mvc-->

<!--&lt;!&ndash;    配置处理器映射器  &ndash;&gt;-->
<!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->

<!--&lt;!&ndash;    处理器的适配器RequestMappingHandlerAdapter &ndash;&gt;-->
<!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>-->

<!--    注解驱动 如果 你添加了 mvc:annotation-driven 会默认
       加载  RequestMappingHandlerMapping / RequestMappingHandlerAdapter
       推荐大家使用
 -->
    <mvc:annotation-driven></mvc:annotation-driven>

<!--    静态资源问题?
        1. 前端控制拦截了 静态资源
        tomcat 中有一个默认的 servlet 处理 静态资源 映射的配置 /
        在此加载 项目下面的web.xml/   前端控制会把 tomcat下面的/覆盖
        前端控制   会把html/js等静态资源进行拦截

     解决问题:
         1. 告诉 mvc 使用tomcat的默认servlet 处理 静态资源

         2.  前端控制器 / 可以通过 url的后缀匹配 *.do *.action
             只会拦截  后缀结尾的请求  js/ html等不会拦截

         3. mvc:resouce  告诉mvc 静态资源不用拦截
            mapping  映射  /html/**  html文件下面的所有的包和报下面的资源的映射
            location 位置
            /html/** 下面的资源都不用拦截
            一般配置多个
-->
<!--    <mvc:default-servlet-handler></mvc:default-servlet-handler>-->

        <mvc:resources mapping="/html/**" location="/html/"></mvc:resources>
<!--        <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>-->
<!--        <mvc:resources mapping="/css/**" location="/css/"></mvc:resources>-->

</beans>